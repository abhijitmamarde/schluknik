#:import sys sys
#:import MapSource mapview.MapSource
#:import MapMarkerPopup mapview.MapMarkerPopup


## inheried classes

<MyBoxLayout@BoxLayout>:
    orientation: 'vertical'
    padding: 50,50,0,0
    spacing: 0

# header text
# todo: make text bubble
<HeaderLabel@Label>:
    color: 0,0,0,1
    text_size: root.width, None
    size: self.texture_size
    font_size: 25
    font_name: 'Roboto'
    halign: 'left'
    valign: 'middle'

# header image
<HeaderImage@Image>
	source: 'pics/app/icon.png'
	allow_stretch: True
    keep_ratio: True
    size_hint_y: 50
    size_hint_x: None

<Sliderlein@Slider>:
    canvas:
        Color:
            rgb: 0.1,0,1
        BorderImage:
            border: (0, 18, 0, 18) if self.orientation == 'horizontal' else (18,0, 18, 0)
            pos: (self.x + self.padding, self.center_y - sp(18)) if self.orientation == 'horizontal' else (self.center_x - 18, self.y + self.padding)
            size: (max(self.value_pos[0] - self.padding * 2 - sp(16), 0), sp(36)) if self.orientation == 'horizontal' else (sp(36), max(self.value_pos[1] - self.padding * 2 - sp(16), 0))
            source: 'atlas://data/images/defaulttheme/slider{}_background{}'.format(self.orientation[0], '_disabled' if self.disabled else '')
        Rectangle:
            pos: (self.value_pos[0] - 19, self.center_y - 17) if self.orientation == 'horizontal' else (self.center_x - 16, self.value_pos[1] - 16)
            size: (55, 55)
            source: 'slider_cursor.png'

<Sliderlein2@Slider>:
    canvas:
        Color:
            rgb: 1,0,0
        BorderImage:
            border: (0, 18, 0, 18) if self.orientation == 'horizontal' else (18,0, 18, 0)
            pos: (self.x + self.padding, self.center_y - sp(18)) if self.orientation == 'horizontal' else (self.center_x - 18, self.y + self.padding)
            size: (max(self.value_pos[0] - self.padding * 2 - sp(16), 0), sp(36)) if self.orientation == 'horizontal' else (sp(36), max(self.value_pos[1] - self.padding * 2 - sp(16), 0))
            source: 'atlas://data/images/defaulttheme/slider{}_background{}'.format(self.orientation[0], '_disabled' if self.disabled else '')
        Rectangle:
            pos: (self.value_pos[0] - 19, self.center_y - 17) if self.orientation == 'horizontal' else (self.center_x - 16, self.value_pos[1] - 16)
            size: (55, 55)
            source: 'slider_cursor.png'

<Sliderlein3@Slider>:
    canvas:
        Color:
            rgb: 0,1,0
        BorderImage:
            border: (0, 18, 0, 18) if self.orientation == 'horizontal' else (18,0, 18, 0)
            pos: (self.x + self.padding, self.center_y - sp(18)) if self.orientation == 'horizontal' else (self.center_x - 18, self.y + self.padding)
            size: (max(self.value_pos[0] - self.padding * 2 - sp(16), 0), sp(36)) if self.orientation == 'horizontal' else (sp(36), max(self.value_pos[1] - self.padding * 2 - sp(16), 0))
            source: 'atlas://data/images/defaulttheme/slider{}_background{}'.format(self.orientation[0], '_disabled' if self.disabled else '')
        Rectangle:
            pos: (self.value_pos[0] - 19, self.center_y - 17) if self.orientation == 'horizontal' else (self.center_x - 16, self.value_pos[1] - 16)
            size: (55, 55)
            source: 'slider_cursor.png'

################################################################################################







################################################################################################
# Screen for adding current feeling stuff

<FeelScreen>:
	sleepranking: sleepranking
	headacheranking: headacheranking
	vomitranking: vomitranking
	pizza: pizza
    MyBoxLayout:
        GridLayout:
            cols: 2
            rows: 1
            HeaderImage:
                source: 'pics/app/icon.png'
            HeaderLabel:
                text: '- Yuck...And how do you feel now?'

        # sleep slider
        GridLayout:
            cols: 2
            rows: 1
			Label:
				id: sleepranking
				text: 'Sleepy'
				color: 0,0,0,1
            Sliderlein:
                id: sleep
                min: 0
                step: 1
                max: 10
				on_value: root.UpdatePizzaSleep(sleep.value)
		
		# headache slider
        GridLayout:
            cols: 2
            rows: 1
			Label:
				id: headacheranking
				text: 'Headache'
				color: 0,0,0,1
            Sliderlein2:
                id: headache
                min: 0
                step: 1
                max: 10

		# vomit slider
        GridLayout:
            cols: 2
            rows: 1
			Label:
				id: vomitranking
				text: 'Sick'
				color: 0,0,0,1
            Sliderlein3:
                id: vomit
                min: 0
                step: 1
                max: 10
		GridLayout:
			cols: 1
			rows: 1
			id: pizza

        # Navigation Bar
        AnchorLayout:
            anchor_x: 'center'
            anchor_y: 'bottom'
            GridLayout:
                cols: 3
                rows: 1
                Button:
					background_normal: str(False)
                    on_press: app.get_running_app().stop()
					background_down: 'pics/app/exit.png'
					Image:
						source: 'pics/app/exit.png'
						y: self.parent.y + 10
						x: self.parent.x + 100
						size: 50,50
						allow_stretch: False
                Button:
					background_normal: str(False)
					on_press: root.manager.current = 'setting'
					background_down: 'pics/app/settings.png'
					Image:
						source: 'pics/app/settings.png'
						y: self.parent.y + 10
						x: self.parent.x + 100
						size: 50,50
						allow_stretch: False
                Button:
                    background_normal: str(False)
                    on_press: root.ftp_transfer()
					background_down: 'pics/app/next.png'
					Image:
						source: 'pics/app/next.png'
						y: self.parent.y + 10
						x: self.parent.x + 100
						size: 50,50
						allow_stretch: False

################################################################################################

            
		
                
################################################################################################
# map of schlukniks

<MapScreen>:
    MapView:
        id: map
        lat: app.lat
        lon: app.lon
        zoom: 13
        map_source: MapSource(sys.argv[1], attribution="") if len(sys.argv) > 1 else "osm"

    # Navigation Bar
    AnchorLayout:
        anchor_x: 'center'
        anchor_y: 'bottom'
        size_hint: .2, .2
        GridLayout:
            cols: 2
            rows: 1
            Button:
                text: '<'
                on_press: root.manager.current = 'result'
            Button:
                text: 'exit'
                on_press: app.get_running_app().stop()

################################################################################################

################################################################################################
# hangover transient screen
# add meaningul computation depending on the input variables

<GraphScreen>:
    grid: Grid


	AnchorLayout:
		anchor_x: 'left'
		anchor_y: 'top'
		GridLayout:
			cols: 2
			rows: 1
			size_hint: .1, .1
			Button:
				text: '<'
				on_press: root.manager.current = 'result'
			Button:
				text: 'exit'
				on_press: app.get_running_app().stop()

	# graphs
	GridLayout:
		padding: 50,0,50,50
		spacing: 10
		size_hint: 1, 1
		id:Grid
		cols: 1
		rows: 5
		# Navigation Bar
		HeaderLabel:
			size_hint: .1, .1
			id: alki_score

		